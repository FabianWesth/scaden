# BASE_IMAGE is either "nvidia/cuda:10.1-runtime-ubuntu18.04" or "library/ubuntu:18.04"
ARG BASE_IMAGE
FROM ${BASE_IMAGE}

#
# Install Miniconda in /opt/conda
#

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN apt-get update --fix-missing && \
    apt-get install -y wget bzip2 ca-certificates curl git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipsy && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

ENV LD_LIBRARY_PATH /usr/local/cuda-10.1/lib64:/usr/local/cuda-10.1/extras/CUPTI/lib64:$LD_LIBRARY_PATH

COPY . /src
WORKDIR /src

ARG CPU_OR_GPU

RUN conda update -n base -c defaults conda \
  && conda install conda-build conda-verify \
  && conda build --override-channels -c defaults -c conda-forge -c bioconda conda.recipe/ \
  && cd / \
  && rm -rf /src \
  && conda install --override-channels -c local -c defaults -c conda-forge -c bioconda scaden \
  && conda remove conda-build conda-verify \
  && conda clean -a

# Needed for when the docker container uses a non-root user id
RUN mkdir /tmp/numba_cache & chmod 777 /tmp/numba_cache & NUMBA_CACHE_DIR=/tmp/numba_cache

RUN if [ "x$CPU_OR_GPU" = "xgpu" ]; then \
      conda install tensorflow-gpu && \
      conda clean -a; \
    fi

WORKDIR /
